{"ast":null,"code":"import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nvar svgMotionConfig = {\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n    onMount: function (props, instance, _a) {\n      var renderState = _a.renderState,\n          latestValues = _a.latestValues;\n\n      try {\n        renderState.dimensions = typeof instance.getBBox === \"function\" ? instance.getBBox() : instance.getBoundingClientRect();\n      } catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      buildSVGAttrs(renderState, latestValues, {\n        enableHardwareAcceleration: false\n      }, props.transformTemplate);\n      renderSVG(instance, renderState);\n    }\n  })\n};\nexport { svgMotionConfig };","map":{"version":3,"sources":["C:/Users/ADMIN/Documents/GitHub/SoccerTour/client/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs"],"names":["renderSVG","scrapeMotionValuesFromProps","makeUseVisualState","createSvgRenderState","buildSVGAttrs","svgMotionConfig","useVisualState","createRenderState","onMount","props","instance","_a","renderState","latestValues","dimensions","getBBox","getBoundingClientRect","e","x","y","width","height","enableHardwareAcceleration","transformTemplate"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,2BAAT,QAA4C,kCAA5C;AACA,SAASC,kBAAT,QAAmC,yCAAnC;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AAEA,IAAIC,eAAe,GAAG;AAClBC,EAAAA,cAAc,EAAEJ,kBAAkB,CAAC;AAC/BD,IAAAA,2BAA2B,EAAEA,2BADE;AAE/BM,IAAAA,iBAAiB,EAAEJ,oBAFY;AAG/BK,IAAAA,OAAO,EAAE,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,EAA3B,EAA+B;AACpC,UAAIC,WAAW,GAAGD,EAAE,CAACC,WAArB;AAAA,UAAkCC,YAAY,GAAGF,EAAE,CAACE,YAApD;;AACA,UAAI;AACAD,QAAAA,WAAW,CAACE,UAAZ,GACI,OAAOJ,QAAQ,CAACK,OAAhB,KACI,UADJ,GAEML,QAAQ,CAACK,OAAT,EAFN,GAGML,QAAQ,CAACM,qBAAT,EAJV;AAKH,OAND,CAOA,OAAOC,CAAP,EAAU;AACN;AACAL,QAAAA,WAAW,CAACE,UAAZ,GAAyB;AACrBI,UAAAA,CAAC,EAAE,CADkB;AAErBC,UAAAA,CAAC,EAAE,CAFkB;AAGrBC,UAAAA,KAAK,EAAE,CAHc;AAIrBC,UAAAA,MAAM,EAAE;AAJa,SAAzB;AAMH;;AACDjB,MAAAA,aAAa,CAACQ,WAAD,EAAcC,YAAd,EAA4B;AAAES,QAAAA,0BAA0B,EAAE;AAA9B,OAA5B,EAAmEb,KAAK,CAACc,iBAAzE,CAAb;AACAvB,MAAAA,SAAS,CAACU,QAAD,EAAWE,WAAX,CAAT;AACH;AAvB8B,GAAD;AADhB,CAAtB;AA4BA,SAASP,eAAT","sourcesContent":["import { renderSVG } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\n\r\nvar svgMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n        createRenderState: createSvgRenderState,\r\n        onMount: function (props, instance, _a) {\r\n            var renderState = _a.renderState, latestValues = _a.latestValues;\r\n            try {\r\n                renderState.dimensions =\r\n                    typeof instance.getBBox ===\r\n                        \"function\"\r\n                        ? instance.getBBox()\r\n                        : instance.getBoundingClientRect();\r\n            }\r\n            catch (e) {\r\n                // Most likely trying to measure an unrendered element under Firefox\r\n                renderState.dimensions = {\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                };\r\n            }\r\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\r\n            renderSVG(instance, renderState);\r\n        },\r\n    }),\r\n};\r\n\r\nexport { svgMotionConfig };\r\n"]},"metadata":{},"sourceType":"module"}