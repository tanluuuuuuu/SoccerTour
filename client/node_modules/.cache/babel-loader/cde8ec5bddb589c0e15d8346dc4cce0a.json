{"ast":null,"code":"import { px } from 'style-value-types';\nvar dashKeys = {\n  offset: \"stroke-dashoffset\",\n  array: \"stroke-dasharray\"\n};\nvar camelKeys = {\n  offset: \"strokeDashoffset\",\n  array: \"strokeDasharray\"\n};\n/**\r\n * Build SVG path properties. Uses the path's measured length to convert\r\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\r\n * and stroke-dasharray attributes.\r\n *\r\n * This function is mutative to reduce per-frame GC.\r\n */\n\nfunction buildSVGPath(attrs, length, spacing, offset, useDashCase) {\n  if (spacing === void 0) {\n    spacing = 1;\n  }\n\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (useDashCase === void 0) {\n    useDashCase = true;\n  } // Normalise path length by setting SVG attribute pathLength to 1\n\n\n  attrs.pathLength = 1; // We use dash case when setting attributes directly to the DOM node and camel case\n  // when defining props on a React component.\n\n  var keys = useDashCase ? dashKeys : camelKeys; // Build the dash offset\n\n  attrs[keys.offset] = px.transform(-offset); // Build the dash array\n\n  var pathLength = px.transform(length);\n  var pathSpacing = px.transform(spacing);\n  attrs[keys.array] = \"\".concat(pathLength, \" \").concat(pathSpacing);\n}\n\nexport { buildSVGPath };","map":{"version":3,"sources":["C:/Users/ADMIN/Documents/GitHub/SoccerTour/client/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs"],"names":["px","dashKeys","offset","array","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","pathLength","keys","transform","pathSpacing","concat"],"mappings":"AAAA,SAASA,EAAT,QAAmB,mBAAnB;AAEA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,MAAM,EAAE,mBADG;AAEXC,EAAAA,KAAK,EAAE;AAFI,CAAf;AAIA,IAAIC,SAAS,GAAG;AACZF,EAAAA,MAAM,EAAE,kBADI;AAEZC,EAAAA,KAAK,EAAE;AAFK,CAAhB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CN,MAA9C,EAAsDO,WAAtD,EAAmE;AAC/D,MAAID,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,CAAV;AAAc;;AACxC,MAAIN,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,IAAAA,MAAM,GAAG,CAAT;AAAa;;AACtC,MAAIO,WAAW,KAAK,KAAK,CAAzB,EAA4B;AAAEA,IAAAA,WAAW,GAAG,IAAd;AAAqB,GAHY,CAI/D;;;AACAH,EAAAA,KAAK,CAACI,UAAN,GAAmB,CAAnB,CAL+D,CAM/D;AACA;;AACA,MAAIC,IAAI,GAAGF,WAAW,GAAGR,QAAH,GAAcG,SAApC,CAR+D,CAS/D;;AACAE,EAAAA,KAAK,CAACK,IAAI,CAACT,MAAN,CAAL,GAAqBF,EAAE,CAACY,SAAH,CAAa,CAACV,MAAd,CAArB,CAV+D,CAW/D;;AACA,MAAIQ,UAAU,GAAGV,EAAE,CAACY,SAAH,CAAaL,MAAb,CAAjB;AACA,MAAIM,WAAW,GAAGb,EAAE,CAACY,SAAH,CAAaJ,OAAb,CAAlB;AACAF,EAAAA,KAAK,CAACK,IAAI,CAACR,KAAN,CAAL,GAAoB,GAAGW,MAAH,CAAUJ,UAAV,EAAsB,GAAtB,EAA2BI,MAA3B,CAAkCD,WAAlC,CAApB;AACH;;AAED,SAASR,YAAT","sourcesContent":["import { px } from 'style-value-types';\r\n\r\nvar dashKeys = {\r\n    offset: \"stroke-dashoffset\",\r\n    array: \"stroke-dasharray\",\r\n};\r\nvar camelKeys = {\r\n    offset: \"strokeDashoffset\",\r\n    array: \"strokeDasharray\",\r\n};\r\n/**\r\n * Build SVG path properties. Uses the path's measured length to convert\r\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\r\n * and stroke-dasharray attributes.\r\n *\r\n * This function is mutative to reduce per-frame GC.\r\n */\r\nfunction buildSVGPath(attrs, length, spacing, offset, useDashCase) {\r\n    if (spacing === void 0) { spacing = 1; }\r\n    if (offset === void 0) { offset = 0; }\r\n    if (useDashCase === void 0) { useDashCase = true; }\r\n    // Normalise path length by setting SVG attribute pathLength to 1\r\n    attrs.pathLength = 1;\r\n    // We use dash case when setting attributes directly to the DOM node and camel case\r\n    // when defining props on a React component.\r\n    var keys = useDashCase ? dashKeys : camelKeys;\r\n    // Build the dash offset\r\n    attrs[keys.offset] = px.transform(-offset);\r\n    // Build the dash array\r\n    var pathLength = px.transform(length);\r\n    var pathSpacing = px.transform(spacing);\r\n    attrs[keys.array] = \"\".concat(pathLength, \" \").concat(pathSpacing);\r\n}\r\n\r\nexport { buildSVGPath };\r\n"]},"metadata":{},"sourceType":"module"}