{"ast":null,"code":"import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\nconst hsla = {\n  test: isColorString('hsl', 'hue'),\n  parse: splitColor('hue', 'saturation', 'lightness'),\n  transform: _ref => {\n    let {\n      hue,\n      saturation,\n      lightness,\n      alpha: alpha$1 = 1\n    } = _ref;\n    return 'hsla(' + Math.round(hue) + ', ' + percent.transform(sanitize(saturation)) + ', ' + percent.transform(sanitize(lightness)) + ', ' + sanitize(alpha.transform(alpha$1)) + ')';\n  }\n};\nexport { hsla };","map":{"version":3,"sources":["C:/Users/ADMIN/Documents/GitHub/SoccerTour/client/node_modules/style-value-types/dist/es/color/hsla.mjs"],"names":["alpha","percent","sanitize","isColorString","splitColor","hsla","test","parse","transform","hue","saturation","lightness","alpha$1","Math","round"],"mappings":"AAAA,SAASA,KAAT,QAAsB,sBAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,aAA1C;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAEH,aAAa,CAAC,KAAD,EAAQ,KAAR,CADV;AAETI,EAAAA,KAAK,EAAEH,UAAU,CAAC,KAAD,EAAQ,YAAR,EAAsB,WAAtB,CAFR;AAGTI,EAAAA,SAAS,EAAE,QAAwD;AAAA,QAAvD;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,UAAP;AAAmBC,MAAAA,SAAnB;AAA8BX,MAAAA,KAAK,EAAEY,OAAO,GAAG;AAA/C,KAAuD;AAC/D,WAAQ,UACJC,IAAI,CAACC,KAAL,CAAWL,GAAX,CADI,GAEJ,IAFI,GAGJR,OAAO,CAACO,SAAR,CAAkBN,QAAQ,CAACQ,UAAD,CAA1B,CAHI,GAIJ,IAJI,GAKJT,OAAO,CAACO,SAAR,CAAkBN,QAAQ,CAACS,SAAD,CAA1B,CALI,GAMJ,IANI,GAOJT,QAAQ,CAACF,KAAK,CAACQ,SAAN,CAAgBI,OAAhB,CAAD,CAPJ,GAQJ,GARJ;AASH;AAbQ,CAAb;AAgBA,SAASP,IAAT","sourcesContent":["import { alpha } from '../numbers/index.mjs';\r\nimport { percent } from '../numbers/units.mjs';\r\nimport { sanitize } from '../utils.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst hsla = {\r\n    test: isColorString('hsl', 'hue'),\r\n    parse: splitColor('hue', 'saturation', 'lightness'),\r\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\r\n        return ('hsla(' +\r\n            Math.round(hue) +\r\n            ', ' +\r\n            percent.transform(sanitize(saturation)) +\r\n            ', ' +\r\n            percent.transform(sanitize(lightness)) +\r\n            ', ' +\r\n            sanitize(alpha.transform(alpha$1)) +\r\n            ')');\r\n    },\r\n};\r\n\r\nexport { hsla };\r\n"]},"metadata":{},"sourceType":"module"}